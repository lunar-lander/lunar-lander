name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install
        
      - name: Lint
        run: yarn lint
        
      - name: Type check
        run: yarn typecheck
  
  build:
    needs: test
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install
        
      - name: Build
        run: yarn build
        
      - name: Package
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            yarn electron-builder --linux
          elif [ "$RUNNER_OS" == "macOS" ]; then
            yarn electron-builder --mac
          else
            yarn electron-builder --win
          fi
        shell: bash
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-package
          path: build/
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.AppImage
            artifacts/**/*.dmg
            artifacts/**/*.exe
            artifacts/**/*.zip
            artifacts/**/*.deb
            artifacts/**/*.rpm
            artifacts/**/*.snap
          draft: true
          generate_release_notes: true
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}