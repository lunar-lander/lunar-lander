name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

  build:
    needs: setup
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Package
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            yarn dist:linux
          elif [ "$RUNNER_OS" == "macOS" ]; then
            yarn dist:mac-manual
          else
            yarn dist:win-manual
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-package
          path: build/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.AppImage
            artifacts/**/*.dmg
            artifacts/**/*.exe
            artifacts/**/*.zip
            artifacts/**/*.deb
            artifacts/**/*.rpm
            artifacts/**/*.snap
            artifacts/**/*.pacman
            artifacts/**/*.pkg.tar.zst
          draft: ${{ startsWith(github.ref, 'refs/tags/v') }}
          generate_release_notes: true
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
          tag_name: ${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || format('auto-release-{0}', github.sha) }}
          name: ${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || format('Auto Release {0}', github.sha) }}